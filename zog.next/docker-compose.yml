version: "3.9"
services:
  app:
    platform: "linux/amd64"
    build:
      context: .
      dockerfile: Dockerfile
#      env_file:
#        - .env.production
#      network: apps
      args:
        NEXT_PUBLIC_CLIENTVAR: "clientvar"
        DATABASE_URL: "postgres://partner:iLX2WqYlrJ9WhMyRA@amrita_partner_db:5432/partner"
    working_dir: /app
    restart: always
    container_name: amrita_partner
    env_file:
      - .env.production
    image: amrita-partner-app
#    environment:
#      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db
    networks:
      - apps
  # Контейнер с базой данных
  db:
    image: postgres:15-alpine3.17
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - ./postgres:/var/lib/postgresql/data
#    expose:
#      - '5432'
    restart: always
    container_name: amrita_partner_db
    networks:
      - apps
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./pgadmin:/var/lib/pgadmin

#    ports:
#      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - apps
    restart: unless-stopped
networks:
  apps:
    external: true